import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;
 
public class Main {
  public static int[][][] dp;
	public static void main(String[] args) throws IOException {
        
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        dp = new int[21][21][21];
 		while(true){
            
            StringTokenizer st = new StringTokenizer(br.readLine()," ");
            int a= Integer.parseInt(st.nextToken());
            int b= Integer.parseInt(st.nextToken());
            int c= Integer.parseInt(st.nextToken());
            if(a==-1&&b==-1&&c==-1){
                break;
            }
            System.out.println("w("+a+", "+b+", "+c+") = "+w(a,b,c));
        }
    }
    public static int w(int a, int b, int c){
        if(a<=0||b<=0||c<=0){
            return 1;
        }
        if(a>20||b>20||c>20){
            return w(20,20,20);
        }
        if(dp[a][b][c]!=0){ //계산한 적이 없으면 0!. 즉 0이 아니면 이미 계산된 것이므로 그대로 출력.
            return dp[a][b][c];
        }
        if(a<b && b<c){ //복잡하게 재귀가 많이 호출되는 것들-->dp 사용
            dp[a][b][c]= w(a,b,c-1)+w(a,b-1,c-1)-w(a,b-1,c);
        }
        else{ ////복잡하게 재귀가 많이 호출되는 것들-->dp 사용
            dp[a][b][c]=w(a-1, b, c) + w(a-1, b-1, c) + w(a-1, b, c-1) - w(a-1, b-1, c-1);
        }
        return dp[a][b][c];
    }
}
