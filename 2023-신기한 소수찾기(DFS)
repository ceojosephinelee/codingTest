import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class Main {
    public static int N; 
	public static void main(String[] args) throws IOException {
        
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
 
		N = Integer.parseInt(br.readLine());
        
        DFS(2,1);
        DFS(3,1);
        DFS(5,1);
        DFS(7,1);
    }
    public static void DFS(int number, int jariso){
        if(jariso==N){
            if(isPrime(number)){ //자릿수를 만족하면서 소수이기까지하면 . 이전 자릿수들은 소수인걸 만족했기 때문에 검증할 필요 없음.-->출력
                System.out.println(number);                
            }
            return;//호출한 곳으로 돌아감...DFS(2,1)했다면 다음 DFS(3,1)로 감.무조건 종료!. 끝났다는 뜻임.
        }             
        for(int j=1;j<=9;j++){
            if(j%2==0){
                continue;
            }
            if(isPrime(number*10+j)){ //아랫자리수부터 만족해와야 DFS 실행해서 다음 자리까지 갈 수 있음.
                DFS(number*10+j,jariso+1);
            }
        } 
    }
    public static boolean isPrime(int num){
        for(int i=2;i<=num/2;i++){
            if(num%i==0){
                return false;
            }
        }
        return true;
    }
}
