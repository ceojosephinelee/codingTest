import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

 
public class Main {
    public static int[] arr; //1차원 배열의 인덱스, 값으로 2차원 같은 효과
    public static int count=0;//구해야하는 경우의 수
    public static int N;
    
	public static void main(String[] args) throws IOException {
        
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(br.readLine());
        arr = new int[N];
        BT(0);//행의 위치->1번째 줄부터 넣기
		System.out.print(count);
    }
    public static void BT(int row){
        if(row==N){
            count++;
            return;
        }
        //배치하기
        for(int i =0;i<N;i++){
            arr[row]=i;// 1번쨰 줄의 값이 달라짐에 따라 count 세는 것임!
            //유효성 검사
            if(check(row)){//통과하면
                BT(row+1);//다음 행 백트래킹, 이걸로 행이 중복되지 않는 걸 알 수 있음.방문배열 필요 없음.
            }
        }
        
    }
    public static boolean check(int row){
        for(int i=0;i<row;i++){ //여태까지 값이 삽입된 행들에 대해서 검사해야하므로
            //1. 직선 검사
            if(arr[i]==arr[row]){ //arr[row]가 새로 삽입된 값. 이 값이 전에 삽입된 값들과 공격성이 있는지 확인!
                return false; //더 볼 필요 없음
            }
            //2. 대각선 검사
            if((int)Math.abs(row-i)==(int)Math.abs(arr[row]-arr[i])){
                return false;
            }
        }
        return true;
    }
}
