//3가지 경우의 수로 나눠야한다는 것까진 생각.
//DP 배열 정의 : 3가지 조건문(r,g,b) & 2차원 배열 [i][0],[i][1],[i][2]
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;
 
public class Main {
 
	public static void main(String[] args) throws IOException {
        
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
 
 		int N = Integer.parseInt(br.readLine());
        int[][] DP = new int[1001][3];
        int[][] arr = new int[1001][3];
        DP[1][0]=arr[0][0]; 
        DP[1][1]=arr[0][1];
        DP[1][2]=arr[0][2];
        
        for(int i =1;i<=N;i++){
            StringTokenizer st = new StringTokenizer(br.readLine()," ");
            for(int j =0;j<3;j++){
                arr[i][j]=Integer.parseInt(st.nextToken());
            }
        }
        for(int i =1;i<=N;i++){
            DP[i][0]=Math.min(DP[i-1][1],DP[i-1][2])+arr[i][0]; //현재 R 선택했을 때 최소값
            DP[i][1]=Math.min(DP[i-1][0],DP[i-1][2])+arr[i][1]; //G
            DP[i][2]=Math.min(DP[i-1][0],DP[i-1][1])+arr[i][2]; //B
        }
        //3값 중 최소
        int min = Math.min(DP[N][0], Math.min(DP[N][1], DP[N][2]));
        System.out.println(min);
        
    }
}
